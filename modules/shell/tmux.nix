{ config, options, pkgs, lib, ... }:

with lib;
with lib.my;
let cfg = config.modules.shell.tmux;
    configDir = config.dotfiles.configDir;
in {
  options.modules.shell.tmux = with types; {
    enable = mkBoolOpt false;
    term = mkOpt str "xterm-256color";
    rcFiles = mkOpt (listOf (either str path)) [];
  };

  config = mkIf cfg.enable {
    programs.tmux = {
      enable = true;
      keyMode = "vi";
      extraConfig = with pkgs.tmuxPlugins; ''
        # set -g default-terminal "tmux-256color"  # try on issues with colors
        set -s default-terminal "${cfg.term}"
        source-file $TMUX_HOME/tmux.conf
        ${concatMapStrings (path: "source-file '${path}'\n") cfg.rcFiles}

        # Run plugins
        run-shell ${copycat.rtp}
        run-shell ${prefix-highlight.rtp}
        run-shell ${yank.rtp}
        run-shell ${resurrect.rtp}
      '';
      # I avoid programs.tmux.plugins because they're initialized before
      # extraConfig, robbing us of the opportunity to pre-configure plugins.
      # plugins = with pkgs.tmuxPlugins; [];
    };

    user.packages = with pkgs.tmuxPlugins; [
      (pkgs.writeScriptBin "mux" ''
        function ressurect() {
            pgrep -vx tmux > /dev/null && \
                                  tmux new -d -s delete-me && \
                                  tmux run-shell ${resurrect}/share/tmux-plugins/resurrect/scripts/restore.sh && \
                                  tmux kill-session -t delete-me
        }
        function attach() {
          tmux ls | grep -qEv 'attached|scratch' && tmux at
        }

        attach || ressurect && attach
       '')
    ];

    home.configFile."tmux" = {
      source = "${configDir}/tmux";
      recursive = true;
    };

    # /etc/tmux.conf is generated by programs.tmux
    modules.theme.onReload.tmux = "${pkgs.tmux}/bin/tmux source-file /etc/tmux.conf";

    modules.shell.zsh = {
      rcInit = "_cache tmuxifier init -";
      rcFiles = [ "${configDir}/tmux/aliases.zsh" ];
    };

    env = {
      PATH = [ "$TMUXIFIER/bin" ];
      TMUX_HOME = "$XDG_CONFIG_HOME/tmux";
      TMUXIFIER = "$XDG_DATA_HOME/tmuxifier";
      TMUXIFIER_LAYOUT_PATH = "$XDG_DATA_HOME/tmuxifier";
    };
  };
}