# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/9fde4312-021c-4fca-8107-d6c0df60eeea";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/90DC-343A";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/152943f9-cda2-46c3-9fe8-dd0efbf6f332"; }
    ];

  fileSystems."${config.user.home}/Arts_and_Entertainment" = {
      device = "volga.local:/Arts_and_Entertainment";
      fsType = "nfs";
      options = [ "noauto" "nofail" "noatime" "nfsvers=4.2" "x-systemd.automount" "x-systemd.idle-timeout=600" ];
  };

  fileSystems."${config.user.home}/Computer" = {
      device = "volga.local:/Computer";
      fsType = "nfs";
      options = [ "noauto" "nofail" "noatime" "nfsvers=4.2" "x-systemd.automount" "x-systemd.idle-timeout=600" ];
  };

  fileSystems."${config.user.home}/IRL" = {
      device = "volga.local:/IRL";
      fsType = "nfs";
      options = [ "noauto" "nofail" "noatime" "nfsvers=4.2" "x-systemd.automount" "x-systemd.idle-timeout=600" ];
  };

  fileSystems."${config.user.home}/Pictures" = {
      device = "volga.local:/Pictures";
      fsType = "nfs";
      options = [ "noauto" "nofail" "noatime" "nfsvers=4.2" "x-systemd.automount" "x-systemd.idle-timeout=600" ];
  };

  fileSystems."${config.user.home}/Videos" = {
      device = "volga.local:/Videos";
      fsType = "nfs";
      options = [ "noauto" "nofail" "noatime" "nfsvers=4.2" "x-systemd.automount" "x-systemd.idle-timeout=600" ];
  };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/9012aa88-25d2-47ff-836f-c7b4639cb5ba";

  # tlp is enabled by nixos-hardware.asus-rog-strix-g513im
  services.tlp.settings = {
    CPU_SCALING_GOVERNOR_ON_BAT="powersave";
    CPU_SCALING_GOVERNOR_ON_AC="ondemand";
    CPU_MAX_PERF_ON_AC=100;
    CPU_MAX_PERF_ON_BAT=50;

    # My laptop is always plugged in wherever I'm willing to use it, so I'll
    # value battery lifespan over runtime. Run `tlp fullcharge` to temporarily
    # force full charge.
    # @see https://linrunner.de/tlp/faq/battery.html#how-to-choose-good-battery-charge-thresholds
    START_CHARGE_THRESH_BAT0=60;
    STOP_CHARGE_THRESH_BAT0=70;
  };

  modules.hardware = {
    audio.enable = true;
    bluetooth.enable = true;
    nvidia.enable = true;
    microcontroller.enable = true;
    android.enable = true;
    fs = {
      enable = true;
      ssd.enable = false;
      nfs.enable = true;
    };
    sensors.enable = true;

    # benchmarking
    utilites.enable = true;
  };

  hardware = {
    xone.enable = true;  # Xbox controller support
    onlykey.enable = true;  # OnlyKey token support
  };

  services.asusd = {
    enable = true;
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}