# tmux.conf
########################################

# https://github.com/tmux/tmux/wiki/FAQ#what-is-the-passthrough-escape-sequence-and-how-do-i-use-it
set -g allow-passthrough on

setw -g automatic-rename on      # rename window after current program
set  -g renumber-windows on      # renumber windows when one is closed
# Zero-based indexing is fine in programming languages, but not so much in a
# multiplexer when zero is on the other side of the keyboard.
set  -g base-index 1
setw -g pane-base-index 1
# display tmux messages longer
set  -g display-time 1500
set  -g display-panes-time 800
# Address vim-mode switching delay (http://superuser.com/a/252717/65504)
set  -s escape-time   5  # increase this if you have some issues with remote server
set  -g history-limit 50000
# Update status-{left,right} more often (default: 15)
set  -g status-interval 5
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize off
# For terminals that support them, propagate these events to programs that
# understand them.
set  -s focus-events on
# Enable mouse + mouse wheel
set  -g mouse on

########################################
# Keybinds                             #
########################################

# Rebind prefix to C-space
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Vi-style keybinds
set -g status-keys vi
set -g mode-keys   vi

bind c new-window      -c "#{pane_current_path}"
bind C command-prompt -p "window name:" "new-window -c \"#{pane_current_path}\"; rename-window '%%'"
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

bind C-w last-pane
bind C-n next-window
bind C-p previous-window

bind N swap-window -t +1 \; next-window
bind P swap-window -t -1 \; previous-window

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind H run '$TMUX_HOME/swap-pane.sh left'
bind J run '$TMUX_HOME/swap-pane.sh down'
bind K run '$TMUX_HOME/swap-pane.sh up'
bind L run '$TMUX_HOME/swap-pane.sh right'
bind M run '$TMUX_HOME/swap-pane.sh master'

bind o resize-pane -Z
bind S choose-session
bind W choose-window
bind / choose-session
bind . choose-window

# Bind = select-layout tiled
bind | select-layout even-horizontal
bind _ select-layout even-vertical

# Disable confirmation
bind x kill-pane
bind X kill-window
bind Q kill-server

# Break pane into a window
bind = select-layout even-vertical
bind + select-layout even-horizontal
bind - break-pane
bind _ join-pane

# Reload config without killing server
bind r source-file /etc/tmux.conf \; display-message "  Config reloaded..".
bind R refresh-client

# Scratchpad
bind-key -n M-` if-shell -F '#{==:#{session_name},scratch}' {
    detach-client
} {
    display-popup -xC -yC -w 60% -h 65% -E "tmux new-session -A -s scratch"
}


########################################
# Copy mode                            #
########################################

bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind B choose-buffer # choose which buffer to paste from
bind p paste-buffer  # paste from the top paste buffer

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi C-g send-keys -X cancel
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line

########################################
# Local config                         #
########################################
set -g @open-editor 'C-e'
set -g @open-S 'https://www.duckduckgo.com/'
set -g @resurrect-processes 'ssh sqlite3 "git log" "~nvim->vi"'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# Sessions based on project directories
bind -r ^a popup -w 100% -y 100% -E tmux_sessionizer
bind -r W run-shell "tmux_sessionizer ~/Wiki"
bind -r G run-shell "tmux_sessionizer /home/inom/Computer/software/dotfiles"
bind -r ^^ switch-client -l

# Interact with entr, write something into files at tmp anc CWD
bind -r F1 run-shell "echo 0 > \"#{pane_current_path}\"/.entr_1"
bind -r F2 run-shell "echo 0 > \"#{pane_current_path}\"/.entr_2"
bind -r F3 run-shell "echo 0 > \"#{pane_current_path}\"/.entr_3"
bind -r F4 run-shell "echo 0 > \"#{pane_current_path}\"/.entr_4"

# Documentation & todo list
bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && $EDITOR TODO.md || $EDITOR ~/Wiki/TODO.md"
bind -r i run-shell "tmux neww tmux_cht"
bind -r I neww -c "#{pane_current_path}" "[[ -e README.md ]] && $EDITOR README.md || $EDITOR ~/Wiki/README.md"

if '[ -f ~/.tmux.conf ]' 'source-file ~/.tmux.conf'